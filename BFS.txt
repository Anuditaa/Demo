#include<stdio.h>
#include<stdlib.h>

typedef struct queue
{

    int size;
    int front;
    int rear;
    int *arr;

} queue;


void enqueue(queue *q,int val)
{

    if(q->rear==q->size-1)
        printf("\nQueue overflow!");
    else
    {
        q->rear++;
        q->arr[q->rear]=val;

    }


}

int dequeue(queue *q)
{
    int a=-1;
    if(q->rear==q->front)
        printf("\nQueue underflow!");
    else
    {
        q->front++;
        a=q->arr[q->front];

    }
    return a;
}

int main()
{
    queue q;
    q.size=400;
    q.front=q.rear=0;
    q.arr=(int*)malloc(q.size*sizeof(int));

    int i,j;
    printf("Enter the starting Node: ");
    scanf("%d",&i);
    int node;
    int visited[7]= {0,0,0,0,0,0,0};
    int arr[7][7]=
    {

        {0,1,1,1,0,0,0},
        {1,0,1,0,0,0,0},
        {1,1,0,1,1,0,0},
        {1,0,1,0,1,0,0},
        {0,0,1,1,0,1,1},
        {0,0,0,0,1,0,0},
        {0,0,0,0,1,0,0}

    };
    printf("\nBreadth First Search(BFS): ");
    printf("%d ",i);
    visited[i]=1;
    enqueue(&q,i);

    while(q.rear!=q.front)
    {
        int node=dequeue(&q);

        for(j=0; j<7; j++)
        {
            if(arr[node][j]==1 && visited[j]==0)
            {
                printf("%d ",j);
                visited[j]=1;
                enqueue(&q,j);

            }
        }
    }
    printf("\n");
    return 0;
}
